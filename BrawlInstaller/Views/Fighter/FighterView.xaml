<UserControl x:Class="BrawlInstaller.Views.FighterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BrawlInstaller.Views"
             xmlns:resources="clr-namespace:BrawlInstaller.Resources"
             xmlns:viewModels="clr-namespace:BrawlInstaller.ViewModels" d:DataContext="{d:DesignInstance Type=viewModels:FighterViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Column="1" Grid.RowSpan="2"/>
        <Grid>
            <GroupBox x:Name="idGroupBox" Header="Fighters" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="fighterListLabel" Content="All Fighters:" HorizontalAlignment="Left" ToolTip="All fighters in build"/>
                            <ContentControl Style="{StaticResource resizeContainer}" Grid.Row="1" MinWidth="120">
                                <ListBox x:Name="fighterListBox" ItemsSource="{Binding FighterList}" SelectedValue="{Binding SelectedFighter, Mode=TwoWay}" Height="400" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding EntryName}">
                                                <TextBlock.InputBindings>
                                                    <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding DataContext.SelectedFighter, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Command="{Binding DataContext.LoadCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ContentControl>
                            <!--<Button x:Name="refreshButton" Content="⟳" Command="{Binding RefreshFightersCommand}" Grid.Row="1" Grid.Column="1" Style="{StaticResource miniButton}"/>-->
                            <Button x:Name="copyFighterButton" Grid.Column="1" Grid.Row="1" Content="→" VerticalAlignment="Center" Command="{Binding CopyFighterCommand}" IsEnabled="{Binding SelectedFighter, Converter={StaticResource nullBoolConverter}}"/>
                            <ComboBox x:Name="rosterDropDown" Grid.Column="2" ItemsSource="{Binding Rosters}" DisplayMemberPath="Name" SelectedValue="{Binding SelectedRoster}" Width="120"/>
                            <Button x:Name="saveRosterButton" Grid.Column="3" Content="Save" Command="{Binding SaveRostersCommand}"/>
                            <ContentControl Style="{StaticResource resizeContainer}" Grid.Row="1" Grid.Column="2" MinWidth="120">
                                <ListBox x:Name="rosterListBox" ItemsSource="{Binding RosterEntries}" SelectedValue="{Binding SelectedRosterEntry}" Height="400" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}">
                                                <TextBlock.InputBindings>
                                                    <MouseBinding MouseAction="LeftDoubleClick" CommandParameter="{Binding DataContext.SelectedRosterEntry, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Command="{Binding DataContext.LoadRosterFighterCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ContentControl>
                            <StackPanel x:Name="rosterButtonsStackPanel" Grid.Column="3" Grid.Row="1">
                                <Button x:Name="moveUpButton" Content="↑" Style="{StaticResource sideButton}" Command="{Binding MoveFighterUpCommand}"/>
                                <Button x:Name="moveDownButton" Content="↓" Style="{StaticResource sideButton}" Command="{Binding MoveFighterDownCommand}"/>
                                <Button x:Name="addButton" Content="+" Style="{StaticResource miniButton}" Command="{Binding AddFighterCommand}"/>
                                <Button x:Name="removeButton" Content="-" Style="{StaticResource miniButton}" Command="{Binding RemoveFighterCommand}"/>
                            </StackPanel>
                            <CheckBox x:Name="inCssCheckBox" Grid.Column="2" Grid.Row="2" IsChecked="{Binding SelectedRosterEntry.InCss}" Content="In CSS" Visibility="{Binding SelectedRosterEntry, Converter={StaticResource nullVisConverter}}" ToolTip="Check to add fighter to CSS"/>
                            <CheckBox x:Name="inRandomCheckBox" Grid.Column="2" Grid.Row="3" IsChecked="{Binding SelectedRosterEntry.InRandom}" Content="In Random" Visibility="{Binding SelectedRosterEntry, Converter={StaticResource nullVisConverter}}" ToolTip="Check to add fighter to random selection"/>
                        </Grid>
                    </ScrollViewer>
                    <StackPanel Grid.Row="1">
                        <Button x:Name="browseButton" Content="Browse..." Command="{Binding OpenFighterCommand}"/>
                        <Button x:Name="loadButton" Content="Load" CommandParameter="{Binding SelectedFighter}" Command="{Binding LoadCommand}" IsEnabled="{Binding SelectedFighter, Converter={StaticResource nullBoolConverter}}"/>
                        <Button x:Name="newButton" Content="New" Command="{Binding NewFighterCommand}"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Column="1" Margin="3,0,0,0"  Visibility="{Binding FighterPackage, Mode=OneWay, Converter={StaticResource nullVisConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TabControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <TabItem Header="Costumes/Cosmetics">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <GroupBox x:Name="costumeGroupBox" Header="Costumes" Grid.ColumnSpan="2">
                                <Grid>
                                    <ContentControl Content="{Binding CostumeViewModel}"/>
                                </Grid>
                            </GroupBox>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <GroupBox x:Name="franchiseIconGroupBox" Header="Franchise Icons" Margin="3,2,2,2">
                                        <ContentControl Content="{Binding FranchiseIconViewModel}"/>
                                    </GroupBox>
                                    <GroupBox x:Name="cosmeticGroupBox" Header="Other Cosmetics" Margin="3,2,2,2">
                                        <ContentControl Content="{Binding CosmeticViewModel}"/>
                                    </GroupBox>
                                </StackPanel>
                                <GroupBox x:Name="trophiesGroupBox" Header="Trophies" Margin="3,2,2,2">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Label x:Name="trophiesLabel" Content="Type:"/>
                                            <ComboBox x:Name="trophiesDropDown" ItemsSource="{Binding TrophyTypes}" DisplayMemberPath="Key" SelectedValuePath="Value" SelectedValue="{Binding SelectedTrophyType}" Width="120" Grid.Column="1"/>
                                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                                                <Button x:Name="changeTrophyButton" Content="Choose..." Command="{Binding ChangeTrophyCommand}"/>
                                                <Button x:Name="newTrophyButton" Content="New" Command="{Binding NewTrophyCommand}"/>
                                                <Button x:Name="clearTrophyButton" Content="Clear" Command="{Binding ClearTrophyCommand}" Visibility="{Binding SelectedFighterTrophy, Converter={StaticResource nullVisConverter}}"/>
                                            </StackPanel>
                                        </Grid>
                                        <Separator/>
                                        <ContentControl Content="{Binding FighterTrophyViewModel}" Visibility="{Binding SelectedFighterTrophy, Converter={StaticResource nullVisConverter}, ConverterParameter={x:Static Visibility.Collapsed}}"/>
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Files/Settings">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <StackPanel Orientation="Horizontal">
                            <GroupBox x:Name="fighterFilesGroupBox" Header="Fighter Files">
                                <ContentControl Content="{Binding FighterFileViewModel}"/>
                            </GroupBox>
                            <GroupBox x:Name="fighterSettingsGroupBox" Header="Fighter Settings">
                                <ContentControl Content="{Binding FighterSettingsViewModel}"/>
                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="deleteButton" Content="Delete" VerticalAlignment="Bottom" HorizontalAlignment="Left" Command="{Binding DeleteCommand}" Visibility="{Binding InternalPackage, Converter={StaticResource boolVisConverter}}"/>
                <WrapPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                    <Label x:Name="fighterConfigIdLabel" Content="Fighter ID:" ToolTip="Fighter ID used by fighter"/>
                    <TextBox x:Name="fighterConfigIdTextbox" Text="{Binding FighterPackage.FighterInfo.Ids.FighterConfigId, Converter={StaticResource hexConverter}}" Width="30" IsReadOnly="{Binding InternalPackage}"/>
                    <Label x:Name="cosmeticConfigIdLabel" Content="Cosmetic Config ID:" ToolTip="Cosmetic config ID used by fighter"/>
                    <TextBox x:Name="cosmeticConfigIdTextbox" Text="{Binding FighterPackage.FighterInfo.Ids.CosmeticConfigId, Converter={StaticResource hexConverter}}" Width="30" IsReadOnly="{Binding InternalPackage}"/>
                    <Label x:Name="slotConfigIdLabel" Content="Slot ID:" ToolTip="Slot ID used by fighter"/>
                    <TextBox x:Name="slotConfigIdTextbox" Text="{Binding FighterPackage.FighterInfo.Ids.SlotConfigId, Converter={StaticResource hexConverter}}" Width="30" IsReadOnly="{Binding InternalPackage}"/>
                    <Label x:Name="cssSlotConfigIdLabel" Content="CSS Slot ID:" ToolTip="CSS slot ID used by fighter"/>
                    <TextBox x:Name="cssSlotConfigIdTextbox" Text="{Binding FighterPackage.FighterInfo.Ids.CSSSlotConfigId, Converter={StaticResource hexConverter}}" Width="30" IsReadOnly="{Binding InternalPackage}"/>
                    <Label x:Name="cosmeticIdLabel" Content="Cosmetic ID:" ToolTip="Cosmetic ID used by fighter"/>
                    <TextBox x:Name="cosmeticIdTextBox" Text="{Binding FighterPackage.FighterInfo.Ids.CosmeticId}" Width="30" IsReadOnly="{Binding InternalPackage}"/>
                    <Button x:Name="exportButton" Content="Save as..." Command="{Binding ExportFighterCommand}"/>
                    <Button x:Name="saveButton" Content="Save" Command="{Binding SavePackageCommand}" Visibility="{Binding FighterPackagePath, Converter={StaticResource stringVisConverter}, ConverterParameter={x:Static Visibility.Collapsed}}"/>
                    <Button x:Name="importButton" Content="{Binding ImportButtonText}" Command="{Binding SaveCommand}" IsEnabled="{Binding ImportButtonEnabled}"/>
                </WrapPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
