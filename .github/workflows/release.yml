name: Build and Package BrawlInstaller

on:
  push:
    branches:
      - release
permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Debug JSON File
        run: cat BrawlInstaller/Resources/update.json

      - name: Get Version from JSON
        id: get-version
        shell: bash
        run: |
            echo "PACKAGE_JSON=$(jq -c . < BrawlInstaller/Resources/update.json)" >> $GITHUB_ENV
            echo "version=${{ fromJson(env.PACKAGE_JSON).Version }}" >> $GITHUB_OUTPUT
            echo "changelog=${{ fromJson(env.PACKAGE_JSON).Changelog }}" >> $GITHUB_OUTPUT

      - name: Echo Version
        run: echo "The version is ${{ steps.get-version.outputs.version }}"

      - name: Echo Changelog
        run: echo "Changelog - ${{ steps.get-version.outputs.changelog}}"

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Restore NuGet Packages
        run: nuget restore BrawlInstaller.sln

      - name: Build Solution
        run: msbuild BrawlInstaller.sln /restore /t:Build /p:Configuration=Release /p:RunCodeAnalysis=False /p:RestorePackagesConfig=true /p:Platform="Any CPU"

      - name: Move color_smash.exe to publish directory
        run: |
            $colorSmashPath = "${{ github.workspace }}\ColorSmash\target\i686-pc-windows-msvc\release\color_smash.exe"
            $publishPath = "${{ github.workspace }}\publish"

            if (Test-Path $colorSmashPath) {
              if (-not (Test-Path $publishPath)) {
                New-Item -Path $publishPath -ItemType Directory
              }
              Move-Item -Path $colorSmashPath -Destination $publishPath
            } 
            else {
              Write-Host "color_smash.exe not found, skipping move."
            }

      - name: Publish .NET Framework Project
        run: msbuild BrawlInstaller/BrawlInstaller.csproj /t:Publish /p:Configuration=Release /p:DeployOnBuild=true /p:OutputPath="${{ github.workspace }}/publish"

      - name: Create Velopack Release
        run: |
          dotnet tool install -g vpk
          vpk download github --repoUrl https://github.com/squidgy617/BrawlInstaller
          vpk pack --packId BrawlInstaller --packVersion ${{ steps.get-version.outputs.version }} --releaseNotes ${{ steps.get-version.outputs.changelog }} --packDir "${{ github.workspace }}/publish" --mainExe BrawlInstaller.exe --packTitle BrawlInstaller --icon .\BrawlInstaller\BrawlInstallerIcon.ico
          vpk upload github --repoUrl https://github.com/squidgy617/BrawlInstaller --publish --releaseName "BrawlInstaller ${{ steps.get-version.outputs.version }}" --tag v${{ steps.get-version.outputs.version }} --token ${{ secrets.GITHUB_TOKEN }}
